1/13/2024
-----------------------------
1. Merged divide and conquer voronoi code into main code, called from optimizer.py
2. Note G.nodes is passing funny stuff, needed to convert it to list to fix bug
3. Is faster but still somewhat slow, potentially optimize via flood-fill algorithm
4. Last estimate for 2pi is 6.117158723854214 from using 30x30 grid and 24 nearest neighbors
5. Next programming to do is test cases for paper
perimeter of circle
perimeter of box
perimeter of sphere
pathological cases (too close to boundary of grid, etc)

estimate for perimeter of circle
6.117158723854214 using 30x30 grid with 24 nearest neighbors

need to make test for perimeter of sphere

3/12/2024 (Attempts to solve bad conditionin number problem)
-----------------------------
Prune lengths and edges to only include ratios of smallest to largest no more than 100

Throw away points that are very close to one another

make symmetric lookup table

5/3/2024
------------------------------
Table seems to be screwed up, use the old 5k table instead 
fixed bug in reconstruct system, now returning correct paper weights for:

u = np.array([[(-1.0,0.0),(1.0,0.0),(0.0,-1.0),(0.0,1.0)\
              ,(-1.0,1.0),(1.0,1.0),(1.0,-1.0),(-1.0,-1.0)\
                  ,(-2.0,1.0),(-1.0,2.0),(1.0,2.0),(2.0,1.0)\
                      ,(2.0,-1.0),(1.0,-2.0),(-1.0,-2.0),(-2.0,-1.0)]])

made new testing file "testing_weights_5_3_2024.py"

!when calling get_weights outside of file!
be wary that list of points needs to be wrapped in extra layer of brackets []
lengths needs to then as a consequence be wrapped in brackets []